<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Bruno Garcia</title>
		<description>Artículos sobre desarrollo front-end y proyectos personales en marcha</description>		
		<link>http://blog.garciaechegaray.com/</link>
		<atom:link href="http://blog.garciaechegaray.com//feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Flatty, un theme Bootstrap desarrollado con Compass &amp; Sass</title>
				<description>&lt;p&gt;&lt;big&gt;Flatty es un theme para Bootstrap desarrollado con Compass &amp;amp; Sass. Añade decenas de nuevos modulos 
HTML/CSS y pre selecciona un buen número de plugins jQuery para abordar cualquier proyecto front-end.&lt;/big&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d85wutc1n854v.cloudfront.net/live/products/600x375/WB0P6NR1N.png?v=2.2&quot; alt=&quot;Flatty&quot;&gt;&lt;/p&gt;

&lt;p&gt;Estoy trabajando en un proyecto a medida, donde gran parte del desarrollo consiste en crear varios back office para los diferentes roles que tiene la aplicación. Y aunque Bootstrap viene de serie con un bueno número de módulos para crear diferentes layouts, en este caso se nos quedaba corto a nivel de funcionalidades predefinidas.&lt;/p&gt;

&lt;p&gt;Investigando las posibilidades que existian en el mercado, dimos con &lt;a href=&quot;https://wrapbootstrap.com&quot;&gt;Wrap Bootstrap&lt;/a&gt; un servicio similar a &lt;a href=&quot;http://themeforest.net/&quot;&gt;Theme Forest&lt;/a&gt; si lo tuyo con los themes para Wordpress o Prestashop. &lt;/p&gt;

&lt;p&gt;Wrap Bootstrap es un market con cientos de themes y templates, organizado por varias categorías, una de ellas
&lt;a href=&quot;https://wrapbootstrap.com/themes/admin&quot;&gt;Admin &amp;amp; Dashboards&lt;/a&gt;. ¡Bingo!.&lt;/p&gt;

&lt;p&gt;Y aqui me permito hace un pequeño inciso querido lector. Te estarás preguntando por qué carallo nos hemos gastado dinero en comprar un theme si lo podemos hacer nosotros mismos, ¿para eso nos pagan, no?.&lt;/p&gt;

&lt;p&gt;Lo primero, Flatty cuesta sólo 18$, que al cambio son unos 13€. Vamos, un precio ridículo para un proyecto web a medida de varios miles de euros. 
Segundo, nos ahorra mucho tiempo de desarrollo. Y en este caso tiempo es igual a dinero. Mucho dinero si calculamos el coste por hora que facturamos. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Al cliente, no le interesa con qué herramientas hagamos nuestro trabajo&lt;/strong&gt; (escribe aquí tu framework, librería o IDE favorito). Lo único que le interesa es el time-to-market y que las características desarrolladas funcionen correctamente y cumplan su objetivo. Si uso Sass, Bootstrap o CakePHP es por que me permite trabajar más rápido y ser el doble de eficiente. Punto. El resto son pajas mentales que nos montamos nosotros mismos.&lt;/p&gt;

&lt;h2&gt;¿Qué más me puedes contar sobre Flatty?&lt;/h2&gt;

&lt;p&gt;Flatty como herramienta tiene cosas buenas y malas. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Primero las malas&lt;/strong&gt;. No es de código abierto, por lo tanto la comunidad no puede evolucionar y mejorar la herramienta. Esto influye en el número de actualizaciones y resolución de bugs (la última actualización es de agosto del 2013). También crea una capa de diseño por encima de Bootstrap que puede no encajar con la imagen de marca de tu proyecto.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ahora las buenas&lt;/strong&gt;. Implementa la última versión de Bootstrap, en concreto la &lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;v3 con Sass&lt;/a&gt;. Utiliza toda la potencia de &lt;a href=&quot;http://compass-style.org/&quot;&gt;Compass&lt;/a&gt; para gestionar el theme. Y añade varias decenas nuevos modulos HTML/CSS. &lt;/p&gt;

&lt;p&gt;Por ejemplo &lt;a href=&quot;http://www.bublinastudio.com/flattybs3/email_templates.html&quot;&gt;email templates&lt;/a&gt;, &lt;a href=&quot;http://www.bublinastudio.com/flattybs3/calendar.html&quot;&gt;calendario&lt;/a&gt;, &lt;a href=&quot;http://www.bublinastudio.com/flattybs3/buttons_and_icons.html&quot;&gt;pack de iconos vía Font Awesome&lt;/a&gt;, &lt;a href=&quot;http://www.bublinastudio.com/flattybs3/wysiwyg.html&quot;&gt;plugin de wysiwyg&lt;/a&gt;, &lt;a href=&quot;http://www.bublinastudio.com/flattybs3/chats.html&quot;&gt;chat&lt;/a&gt;, etc. La &lt;a href=&quot;https://wrapbootstrap.com/theme/flatty-flat-administration-template-WB0P6NR1N&quot;&gt;lista completa de features&lt;/a&gt; la puedes consultar en Wrap Bootstrap.&lt;/p&gt;

&lt;p&gt;Otra punto fuerte de es que puedes personalizar el framework a tu gusto ya que tienes acceso a todos los ficheros &lt;a href=&quot;http://sass-lang.com/&quot;&gt;scss&lt;/a&gt; del proyecto. Por lo tanto si no necesitas un módulo en concreto, simplemente lo eliminas del fichero principal (en nuestro caso &amp;#39;admin.scss&amp;#39;). La estructura de este fichero es la siguiente:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;@import &amp;quot;compass&amp;quot;;
@import &amp;quot;theme/variables&amp;quot;;
@import &amp;quot;theme/utilities&amp;quot;;
@import &amp;quot;theme/main&amp;quot;
@import &amp;quot;theme/font-awesome&amp;quot;;
@import &amp;quot;theme/type&amp;quot;;
@import &amp;quot;theme/header&amp;quot;;
@import &amp;quot;theme/navigation&amp;quot;;
@import &amp;quot;theme/content&amp;quot;;
@import &amp;quot;theme/boxes&amp;quot;;
@import &amp;quot;theme/boxes-quick-links&amp;quot;;
@import &amp;quot;theme/boxes-statistics&amp;quot;;
@import &amp;quot;theme/tables&amp;quot;;
@import &amp;quot;theme/todo-list&amp;quot;;
@import &amp;quot;theme/recent-activity&amp;quot;;
@import &amp;quot;theme/calendar&amp;quot;;
@import &amp;quot;theme/chat&amp;quot;;
@import &amp;quot;theme/tasks&amp;quot;;
@import &amp;quot;theme/nestable-list&amp;quot;;
@import &amp;quot;theme/accordions&amp;quot;;
@import &amp;quot;theme/tabs&amp;quot;;
@import &amp;quot;theme/wizard&amp;quot;;
@import &amp;quot;theme/forms&amp;quot;;
@import &amp;quot;theme/pages/gallery&amp;quot;;
@import &amp;quot;theme/pages/timeline&amp;quot;;
@import &amp;quot;theme/pages/invoice&amp;quot;;
@import &amp;quot;theme/pages/pricing_tables&amp;quot;;
@import &amp;quot;theme/pages/orders&amp;quot;;
@import &amp;quot;theme/pages/faq&amp;quot;;
@import &amp;quot;theme/pages/errors&amp;quot;;
@import &amp;quot;theme/pages/login&amp;quot;;
@import &amp;quot;theme/overrides-bootstrap&amp;quot;;
@import &amp;quot;theme/overrides-plugins&amp;quot;;
@import &amp;quot;theme/common&amp;quot;;
@import &amp;quot;theme/pull&amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Configurar Compass&lt;/h2&gt;

&lt;p&gt;Algo muy útil es saber como &lt;a href=&quot;https://gist.github.com/nathansmith/1179395&quot;&gt;configurar correctamente un proyecto Compass&lt;/a&gt;.
En este ejemplo podemos ver como establecer una serie de configuraciones para el proyecto modificando el fichero &lt;em&gt;config.rb&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;preferred_syntax = :sass

http_path = &amp;#39;/&amp;#39;
relative_assets = true
sass_dir = &amp;#39;flatty&amp;#39; 

images_dir = &amp;#39;assets/img&amp;#39;
fonts_dir = &amp;#39;assets/fonts&amp;#39;
css_dir = &amp;#39;assets/stylesheets&amp;#39;
javascripts_dir = &amp;#39;assets/js&amp;#39;

# Dev
line_comments = true

# Production
# output_style = :compressed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Thu, 16 Oct 2014 23:00:00 +0200</pubDate>
				<link>http://blog.garciaechegaray.com//2014/10/16/bootstrap-theme-flatty-compass-sass.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/10/16/bootstrap-theme-flatty-compass-sass.html</guid>
			</item>
		
			<item>
				<title>Compilando una App en la nube con Phonegap Build</title>
				<description>&lt;p&gt;&lt;big&gt;Phonegap Build es un servicio freemium que te permite compilar una APK/IPA directamente en la nube&lt;/big&gt;&lt;/p&gt;

&lt;p&gt;Estos días he estado probando &lt;a href=&quot;https://build.phonegap.com/&quot;&gt;Phonegap Build&lt;/a&gt; para un cliente y me ha gustado bastante lo sencillo que es compilar una app mobile sin necesidad de bajar y configurar los entornos de desarrollo necesarios para cada tecnología. 
Por lo visto Phonegap está poniendo mucho empeño en facilitarnos la vida a los desarrolladores. Esta misma semana ha sacado una herramienta que nos permite &lt;a href=&quot;http://app.phonegap.com/&quot;&gt;levantar un servidor en local y visualizar los cambios automáticamente&lt;/a&gt; en cualquier dispositivo.&lt;/p&gt;

&lt;p&gt;Montar todo el entorno de Android para que funcione correctamente con Phonegap no es trivial. Al menos en Ubuntu es un proceso que toma un buen rato. Ya no solo consiste en instalar la &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;SDK de Android&lt;/a&gt; si no también la última &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html?ssSourceSiteId=otnjp&quot;&gt;JDK&lt;/a&gt; junto con &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ANT&lt;/a&gt; y configurar los &lt;a href=&quot;http://stackoverflow.com/questions/20323787/cordova-platform-add-android-not-working-while-listing-android-targets/21142421#21142421&quot;&gt;PATH&lt;/a&gt; correspondientes. En el caso de Apple es todavía más complejo, si no tienes una maquina corriendo &lt;em&gt;Mac OS X&lt;/em&gt; es imposible.&lt;/p&gt;

&lt;p&gt;Por suerte Phonegap ofrece este servicio (gratis para una sola app) junto con una &lt;a href=&quot;http://docs.build.phonegap.com/en_US/&quot;&gt;amplia documentación&lt;/a&gt;. Personalmente me preocupaba bastante el tema de personalizar los iconos, splash screen y plugins. Pero creando un archivo &lt;em&gt;config.xml&lt;/em&gt; dentro de tu proyecto todo funciona como la seda.&lt;/p&gt;

&lt;p&gt;Por ejemplo para decirle con que iconos debe trabajar la app:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;--Android icons--&amp;gt;
&amp;lt;icon gap:density=&amp;quot;ldpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/icon-ldpi.png&amp;quot; /&amp;gt;
&amp;lt;icon gap:density=&amp;quot;mdpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/icon-mdpi.png&amp;quot; /&amp;gt;
&amp;lt;icon gap:density=&amp;quot;hdpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/icon-hdpi.png&amp;quot; /&amp;gt;
&amp;lt;icon gap:density=&amp;quot;xhdpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/icon-xhdpi.png&amp;quot; /&amp;gt;

&amp;lt;--iOS icons--&amp;gt;
&amp;lt;icon gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;60&amp;quot; src=&amp;quot;res/screen/ios/icon-60.png&amp;quot; width=&amp;quot;60&amp;quot; /&amp;gt;
&amp;lt;icon gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;120&amp;quot; src=&amp;quot;res/screen/ios/icon-60@2x.png&amp;quot; width=&amp;quot;120&amp;quot; /&amp;gt;
&amp;lt;icon gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;76&amp;quot; src=&amp;quot;res/screen/ios/icon-76.png&amp;quot; width=&amp;quot;76&amp;quot; /&amp;gt;
&amp;lt;icon gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;152&amp;quot; src=&amp;quot;res/screen/ios/icon-76@2x.png&amp;quot; width=&amp;quot;152&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y lo mismo para las splash screen:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;--Android splash--&amp;gt;
&amp;lt;gap:splash gap:density=&amp;quot;ldpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/screen-ldpi-portrait.png&amp;quot; /&amp;gt;
&amp;lt;gap:splash gap:density=&amp;quot;mdpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/screen-mdpi-portrait.png&amp;quot; /&amp;gt;
&amp;lt;gap:splash gap:density=&amp;quot;hdpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/screen-hdpi-portrait.png&amp;quot; /&amp;gt;
&amp;lt;gap:splash gap:density=&amp;quot;xhdpi&amp;quot; gap:platform=&amp;quot;android&amp;quot; src=&amp;quot;res/screen/android/screen-xhdpi-portrait.png&amp;quot; /&amp;gt;

&amp;lt;--iOS splash--&amp;gt;
&amp;lt;gap:splash gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;480&amp;quot; src=&amp;quot;res/screen/ios/screen-iphone-portrait.png&amp;quot; width=&amp;quot;320&amp;quot; /&amp;gt;
&amp;lt;gap:splash gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;960&amp;quot; src=&amp;quot;res/screen/ios/screen-iphone-portrait-2x.png&amp;quot; width=&amp;quot;640&amp;quot; /&amp;gt;
&amp;lt;gap:splash gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;1024&amp;quot; src=&amp;quot;res/screen/ios/screen-ipad-portrait.png&amp;quot; width=&amp;quot;768&amp;quot; /&amp;gt;
&amp;lt;gap:splash gap:platform=&amp;quot;ios&amp;quot; height=&amp;quot;768&amp;quot; src=&amp;quot;res/screen/ios/screen-ipad-landscape.png&amp;quot; width=&amp;quot;1024&amp;quot; /&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puedes incluso decidir en que tecnologías deseas realizar la compilación:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;gap:platform name=&amp;quot;ios&amp;quot; /&amp;gt;
&amp;lt;gap:platform name=&amp;quot;android&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://build.phonegap.com/&quot;&gt;Phonegap Build&lt;/a&gt; tambien permite añadir plugins en la configuración. Por ejemplo si necesitamos el &lt;a href=&quot;https://github.com/apache/cordova-plugin-geolocation&quot;&gt;plugin de geolocalización&lt;/a&gt; tenemos que añadir la siguiente línea:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;gap:plugin name=&amp;quot;org.apache.cordova.geolocation&amp;quot; version=&amp;quot;0.3.7&amp;quot; /&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Os dejo un &lt;em&gt;gist&lt;/em&gt; con toda la configuración necesaria:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/brunogarcia/e2d7844dd2af6ff1e459.js&quot;&gt;&lt;/script&gt;
</description>
				<pubDate>Mon, 07 Jul 2014 19:55:00 +0200</pubDate>
				<link>http://blog.garciaechegaray.com//2014/07/07/compilando-una-app-en-la-nube-con-phonegap-build.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/07/07/compilando-una-app-en-la-nube-con-phonegap-build.html</guid>
			</item>
		
			<item>
				<title>Probando Highcharts 4 y Highmaps</title>
				<description>&lt;p&gt;&lt;big&gt;Highcharts es una librería desarrollada en Javascript que permite crear fácil y rápidamente gráficos interactivos. &lt;/big&gt;&lt;/p&gt;

&lt;p&gt;Trae de serie un nutrido pack de gráficos: área, columnas, barras, pasteles (o quesitos), etc. Simplemente necesitas añadir un set de datos (acepta JSON, CSV, XML) y ya puedes incorporarlo en cualquier proyecto web. Además puedes configurar prácticamente toda la interfaz de usuario con la imagen corporativa que desees (colores, fuentes, tamaños, idiomas, etc.).&lt;/p&gt;

&lt;p&gt;Librerías como Highcharts existen muchas, algunas mucho más potentes como &lt;a href=&quot;http://d3js.org/&quot;&gt;D3&lt;/a&gt; o más básicas como &lt;a href=&quot;http://www.flotcharts.org/&quot;&gt;Flot&lt;/a&gt;, &lt;a href=&quot;http://www.fusioncharts.com/&quot;&gt;Fusion Charts&lt;/a&gt; o incluso &lt;a href=&quot;https://developers.google.com/chart/&quot;&gt;Google Charts&lt;/a&gt;. Pero a mi entender Highcharts es actualmente la librería de facto para crear gráficos &amp;quot;precocinados&amp;quot;. 
Quizás si necesitas crear un nuevo tipo de gráfico muy específico y personalizado, &lt;a href=&quot;http://d3js.org/&quot;&gt;D3&lt;/a&gt; sea la mejor y única opción por el momento, siempre teniendo en cuenta que existen librerías como &lt;a href=&quot;http://nvd3.org/&quot;&gt;NVD3&lt;/a&gt; o &lt;a href=&quot;http://code.shutterstock.com/rickshaw/&quot;&gt;Rickshaw&lt;/a&gt; que te pueden ahorrar tiempo de desarrollo. &lt;a href=&quot;http://nvd3.org/&quot;&gt;NVD3&lt;/a&gt; todavía se encuentra en beta, pero a nivel de &lt;a href=&quot;http://jsperf.com/charts-lib-comparasion/8&quot;&gt;performance&lt;/a&gt; por lo visto gana de lejos. &lt;/p&gt;

&lt;h2&gt;Highcharts 4&lt;/h2&gt;

&lt;p&gt;Hace unas pocas semanas Highcharts ha lanzado una nueva versión (v4) con un muchas novedades. Por ejemplo han añadido nuevos tipos de gráficos: &lt;a href=&quot;http://www.highcharts.com/demo/heatmap&quot;&gt;heat charts&lt;/a&gt;, &lt;a href=&quot;http://www.highcharts.com/demo/3d-column-interactive&quot;&gt;3D charts&lt;/a&gt;, &lt;a href=&quot;http://www.highcharts.com/demo/scatter&quot;&gt;scatter plot&lt;/a&gt;, &lt;a href=&quot;http://www.highcharts.com/demo/funnel&quot;&gt;funnel chart&lt;/a&gt;, &lt;a href=&quot;http://www.highcharts.com/demo/waterfall&quot;&gt;waterfall&lt;/a&gt;. También tienen un &lt;a href=&quot;http://www.highcharts.com/download&quot;&gt;download builder&lt;/a&gt; bastante útil que te permite personalizar la librería con los componentes que vayas a necesitar en cada proyecto, ahorrandole muchos kb al usuario final.&lt;/p&gt;

&lt;h2&gt;Highmaps&lt;/h2&gt;

&lt;p&gt;Pero de todas las novedades, me ha gustado mucho &lt;a href=&quot;http://www.highcharts.com/products/highmaps&quot;&gt;Highmaps&lt;/a&gt;. Es un componente pensado para la creación de mapas. Siempre con la filosofía que  ha seguido Highcharts: sencillo y fácil de usar. Aqui tambíen existen otras opciones mucho más completas y potentes como &lt;a href=&quot;http://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt; o &lt;a href=&quot;http://cartodb.com&quot;&gt;CartoDB&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A destacar: acepta &lt;a href=&quot;http://en.wikipedia.org/wiki/GeoJSON&quot;&gt;GeoJSON&lt;/a&gt; y &lt;a href=&quot;http://en.wikipedia.org/wiki/Svg&quot;&gt;SVG&lt;/a&gt;. Puedes encontrar un listado de recursos gratuitos para ambos formatos en &lt;a href=&quot;http://code.highcharts.com/mapdata/&quot;&gt;Highcharts Code&lt;/a&gt;. También tienes acceso gratuito a la &lt;a href=&quot;http://api.highcharts.com/highmaps&quot;&gt;API&lt;/a&gt; y ejemplos de implementación en la &lt;a href=&quot;http://www.highcharts.com/maps/demo&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Manos a la obra&lt;/h2&gt;

&lt;p&gt;Para esta prueba, he usado el &lt;a href=&quot;http://code.highcharts.com/mapdata/countries/es/es-all.geo.json&quot;&gt;GeoJSON para España&lt;/a&gt;. Se encuentra mínimizado y tiene un peso de 64 kb. Por lo tanto si queréis echarle un ojo tendréis que pasar el código por una herramienta tipo &lt;a href=&quot;http://jsbeautifier.org/&quot;&gt;JS Beautifier&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Leyendo el código vi algo que me resulto extraño: no sé por qué razón utilizan una nomenclatura tan rara para los ID de ciudades. Por ejemplo a Ciudad Real le corresponde el código &lt;em&gt;&amp;quot;es-393&amp;quot;&lt;/em&gt;, a Palencia el &lt;em&gt;&amp;quot;es-7254&lt;/em&gt;, y Salamanca tiene el &lt;em&gt;&amp;quot;es-7251&amp;quot;&lt;/em&gt;. Y así con varias ciudades más. Esto huele raro. Estuve revisando la Wikipedia y encontre que existe una ISO que resuelve este problema. En concreto la &lt;a href=&quot;http://es.wikipedia.org/wiki/ISO_3166-2:ES&quot;&gt;ISO_3166-2:ES&lt;/a&gt;. En ella Palencia es &lt;em&gt;&amp;quot;es-p&amp;quot;&lt;/em&gt;, Ciudad Real &lt;em&gt;&amp;quot;es-cr&amp;quot;&lt;/em&gt; y Salamanca &lt;em&gt;&amp;quot;es-sa&amp;quot;&lt;/em&gt;, vamos una nomenclatura mucho más eficiente para trabajar. En resumen, he enviado un &lt;a href=&quot;http://forum.highcharts.com/highmaps-usage-f14/geojson-spain-iso-3166-2-es-t30083/&quot;&gt;post&lt;/a&gt; al foro oficial de Highcharts, a ver si me explican por qué narices no utilizan el ISO correspondiente.&lt;/p&gt;

&lt;p&gt;Dicho esto, si le echaís un ojo la pestaña Javascript de JSFiddle, veréis que la configuración no tiene mucho misterio.
Primero cambio los colores y tipos de fuentes por defecto. Seguidamente preparo los datos a mostrar, asignandole al &amp;quot;hc-key&amp;quot; de cada ciudad un valor aleatorio de 0 a 99. Y despúes instancio el mapa en el nodo correspondiente (en este caso &amp;quot;#container&amp;quot;). Y poco más, con estos pequeños pasos ya tienes un mapa interactivo de España para mostrar datos.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;650&quot; src=&quot;http://jsfiddle.net/brunogarcia/6ccrt/embedded/result,js,html,css&quot; allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
</description>
				<pubDate>Wed, 02 Jul 2014 18:55:00 +0200</pubDate>
				<link>http://blog.garciaechegaray.com//2014/07/02/probando-highcharts-4-highmaps.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/07/02/probando-highcharts-4-highmaps.html</guid>
			</item>
		
			<item>
				<title>Migrando de Tumblr a Jekyll</title>
				<description>&lt;p&gt;&lt;big&gt;La semana pasada he migrado mi blog de Tumblr a &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. &lt;/big&gt;&lt;/p&gt;

&lt;p&gt;El cambio ha sido motivado por varias razones. El más importante la pésima interfaz de usuario de Tumblr al momento de editar y escribir un nuevo post. Básicamente es un modal mal implementado y ejecutado. Una lástima por parte de Tumblr que fallen en algo tan básico y evidente.
En todo caso, si a Tumblr no le exiges demasiado, tener un blog en su plataforma es una de las mejores opciones. Al menos yo le pongo por delante de Wordpress o Blogger.&lt;/p&gt;

&lt;p&gt;El flujo de trabajo que propone &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; es completamente diferente. Simplemente escribes un post en formato &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;markdown&lt;/a&gt; en tu editor de texto favorito (para mi &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; es la mejor opción) y cuando has finalizado, lanzas un &lt;em&gt;$ git push&lt;/em&gt; y ya lo tienes online. Esto último gracias a &lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; que viene de fábrica completamente integrado con Jekyll.&lt;/p&gt;

&lt;h2&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;Pero recapitulemos un poco. ¿Qué es exactamente Jekyll?. 
Jekyll es un generador de sites estáticos. Está desarrollado en Ruby, y para el sistema de plantillas utiliza &lt;a href=&quot;http://docs.shopify.com/themes/liquid-basics&quot;&gt;Liquid&lt;/a&gt;. La característica más importante es que &lt;strong&gt;no utiliza ningún sistema de base de datos&lt;/strong&gt;. Sólo convierte ficheros .md a .html. Así de simple y sencillo. &lt;/p&gt;

&lt;h2&gt;Instalación&lt;/h2&gt;

&lt;p&gt;En principio la instalación es la parte más sencilla. Aunque puede que tengas problemas con la versión de Ruby adecuada. Tuve que instalar la 1.9.1, con la 2.0 no funciona.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install ruby1.9.1-dev 

sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Migración&lt;/h2&gt;

&lt;p&gt;Jekyll tiene una serie de &lt;a href=&quot;http://import.jekyllrb.com/docs/home/&quot;&gt;importers&lt;/a&gt; para prácticamente cualquier sistema de blog. En el caso de Tumblr la migración consiste en lanzar estas líneas de código. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$ ruby -rubygems -e &amp;#39;require &amp;quot;jekyll-import&amp;quot;;

JekyllImport::Importers::Tumblr.run({
    &amp;quot;url&amp;quot;            =&amp;gt; &amp;quot;http://myblog.tumblr.com&amp;quot;,
    &amp;quot;format&amp;quot;         =&amp;gt; &amp;quot;html&amp;quot;,
    &amp;quot;grab_images&amp;quot;    =&amp;gt; false, 
    &amp;quot;add_highlights&amp;quot; =&amp;gt; false, 
    &amp;quot;rewrite_urls&amp;quot;   =&amp;gt; false 
})&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y ya está. En una carpeta llamada &amp;quot;_posts&amp;quot; encontrarás todos tus posts listos para ejecutarse en Jekyll. En mi caso, la migración a ficheros .md no funcionaba correctamente, vamos me creaba los ficheros pero sin el texto formateado adecuadamente. No me quedo otra opción que exportalo a  &amp;quot;html&amp;quot; y con una herramienta llamada &lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;Pandoc&lt;/a&gt; realizar la conversión a markdown.&lt;/p&gt;

&lt;p&gt;Tuve algunos problemas con ciertas etiquetas html, por ejemplo no existe una etiqueta compatible con &amp;quot;iframe&amp;quot;. Y con las rutas de las imágenes tampoco va muy fina la cosa. En todo caso, nada que algo de tiempo y dedicación no solucionen.&lt;/p&gt;

&lt;h2&gt;GitHub Pages&lt;/h2&gt;

&lt;p&gt;Como he mencionado anteriormente, &lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; ya viene integrado con Jekyll. Si tienes una cuenta en GitHub, necesitas crear un repositorio del tipo &amp;quot;username.github.io&amp;quot;, donde &amp;quot;username&amp;quot; es tu nombre de usuario en GitHub. A continuación haces un clone de dicho repositorio y creas un nuevo proyecto con Jekyll. Esto traducido a código sería algo así:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$ git clone https://github.com/username/username.github.io.git
$ cd username.github.io
$ jekyll new myblog
$ git add -all
$ git commit -m &amp;quot;My first version of Jekyll with GitHub Pages&amp;quot;
$ git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En 5 minutos ya puedes acceder a la ruta &amp;quot;http://username.github.io&amp;quot; y ver tu primera versión de Jekyll online. Fantabuloso :)&lt;/p&gt;

&lt;h2&gt;Servidor en local&lt;/h2&gt;

&lt;p&gt;Para arrancar un servidor Jekyll en tu maquina, basta con lanzar la siguiente línea en tu terminal:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$ jekyll server -w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La opción &lt;em&gt;-w&lt;/em&gt; sirve para regenerar el site si realizas algún cambio.&lt;/p&gt;

&lt;p&gt;Si todo es correcto, podrás acceder a &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; y ver Jekyll ejecutandose en local.&lt;/p&gt;

&lt;h2&gt;Generadores&lt;/h2&gt;

&lt;p&gt;En Yeoman podrás encontrar varios generadores que implementan Jekyll, por ejemplo &lt;a href=&quot;https://github.com/robwierzbowski/generator-jekyllrb&quot;&gt;generator-jekyllrb&lt;/a&gt; es bastante completo. Te configura el proyecto con &lt;a href=&quot;http://compass-style.org/&quot;&gt;Compass&lt;/a&gt; y &lt;a href=&quot;http://html5boilerplate.com/&quot;&gt;HTML5 Boilerplate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personalmente eche en falta un generador con la opción de Jekyll + &lt;a href=&quot;http://foundation.zurb.com/&quot;&gt;Foundation&lt;/a&gt;, o en su defecto con &lt;a href=&quot;http://getbootstrap.com&quot;&gt;Bootstrap&lt;/a&gt;. Pero no se puede tener todo en esta vida :)&lt;/p&gt;

&lt;h2&gt;Look &amp;amp; feel&lt;/h2&gt;

&lt;p&gt;Finalmente opte por crear un proyecto desde cero con Foundation y &lt;a href=&quot;bourbon.io&quot;&gt;Bourbon&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;El primero es el super framework front-end desarrollado por &lt;a href=&quot;http://zurb.com/&quot;&gt;Zurb&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Bourbon es una librería de mixins para &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; muy completa y útil. Los mixins vienen a ser lo que entenderíamos por funciones en el mundo de la programación. Aceptan parámetros y devuelven un resultado ad-hoc. Por ejemplo estas líneas en Sass y Bourbon:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;.button {
    @include border-top-radius(5px);
    @include border-bottom-radius(5px);
    @include border-left-radius(5px);
    @include border-right-radius(5px);
    @include radial-gradient(#1e5799, #3dc3d1);
}   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;compiladas a CSS, serían:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;.button {
    border-top-left-radius:5px;
    border-top-right-radius:5px;
    border-bottom-left-radius:5px;
    border-bottom-right-radius:5px;
    border-top-left-radius:5px;
    border-bottom-left-radius:5px;
    border-top-right-radius:5px;
    border-bottom-right-radius:5px;
    background-color:#1e5799;
    background-image:
        -webkit-gradient(
            radial, center center, 0, center center, 460, 
            color-stop(0%, #1e5799), 
            color-stop(100%, #3dc3d1)
        );
    background-image:
        -webkit-radial-gradient(#1e5799, #3dc3d1);
        background-image: radial-gradient(#1e5799, #3dc3d1);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Combinando con un poco criterio estético las opciones que proporciona Foundation a nivel de layout y Bourbon con sus mixins, podemos tener un look &amp;amp; feel más que aceptable en poco tiempo.&lt;/p&gt;

&lt;h2&gt;Automatización&lt;/h2&gt;

&lt;p&gt;Últimamente utilizo Bower y Grunt para prácticamente cualquier proyecto. Por una parte me permiten automatizar procesos y además compartir esa misma configuración con el resto del equipo de desarrollo.&lt;/p&gt;

&lt;p&gt;Existen varias formas de crear un proyecto con Foundation, en este caso opte por utilizar la opción &amp;quot;Foundation + Grunt + Libsass&amp;quot;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$ foundation new myblog_with_foundation --libsass
$ cd myblog_with_foundation
$ grunt build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://libsass.org/&quot;&gt;Libsass&lt;/a&gt; es un compilador de Sass escrito en C/C++. Según los test es bastante más rápido y eficiente que el compilador original escrito en Ruby. Y es la opción
que utiliza &lt;a href=&quot;http://zurb.com/&quot;&gt;Zurb&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La última línea (&lt;em&gt;$ grunt build&lt;/em&gt;) se encarga de compilar los ficheros .sass a .css&lt;/p&gt;

&lt;p&gt;Ahora sólo queda combinar ambos proyectos. Tuve que añadir Bourbon como &lt;a href=&quot;https://github.com/brunogarcia/brunogarcia.github.io/blob/master/bower.json&quot;&gt;nueva dependecia a bower.json&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;quot;dependencies&amp;quot;: {
    &amp;quot;foundation&amp;quot;: &amp;quot;zurb/bower-foundation&amp;quot;,
    &amp;quot;bourbon&amp;quot;: &amp;quot;https://github.com/thoughtbot/bourbon.git&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y actualizar la &lt;a href=&quot;https://github.com/brunogarcia/brunogarcia.github.io/blob/master/Gruntfile.js&quot;&gt;configuración de Grunt&lt;/a&gt; a mi gusto, añadiendo unicamente los módulos de Foundation que me interesan, en este caso fastclick.js y foundation.topbar.js:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;concat: {   
    dist: {
        src: [
            &amp;#39;bower_components/jquery/dist/jquery.js&amp;#39;,
            &amp;#39;bower_components/foundation/js/vendor/fastclick.js&amp;#39;,
            &amp;#39;bower_components/foundation/js/foundation/foundation.js&amp;#39;,
            &amp;#39;bower_components/foundation/js/foundation/foundation.topbar.js&amp;#39;,
            &amp;#39;js/app.js&amp;#39;
        ],
    dest: &amp;#39;js/build/production.js&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Por otro lado en el fichero &lt;a href=&quot;https://github.com/brunogarcia/brunogarcia.github.io/blob/master/scss/app.scss&quot;&gt;app.scass&lt;/a&gt; sólo compilo los estilos que necesito:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;@import &amp;quot;foundation/components/grid&amp;quot;;
@import &amp;quot;foundation/components/tables&amp;quot;;
@import &amp;quot;foundation/components/top-bar&amp;quot;;
@import &amp;quot;foundation/components/visibility&amp;quot;; 
@import &amp;quot;../bower_components/bourbon/app/assets/stylesheets/bourbon&amp;quot;;
@import &amp;quot;bruno&amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si te interesa conocer más sobre cómo integrar Jekyll con Foundation, date una vuelta por mi &lt;a href=&quot;https://github.com/brunogarcia/brunogarcia.github.io&quot;&gt;repositorio en GitHub&lt;/a&gt; y seguro que encontrarás ideas interesantes.&lt;/p&gt;
</description>
				<pubDate>Sun, 23 Mar 2014 17:55:00 +0100</pubDate>
				<link>http://blog.garciaechegaray.com//2014/03/23/migrando-tumblr-jekyll.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/03/23/migrando-tumblr-jekyll.html</guid>
			</item>
		
			<item>
				<title>El workflow perfecto: Yeoman + Bower + Grunt</title>
				<description>&lt;p&gt;&lt;big&gt;Últimamente estoy trasteando con los
&lt;a href=&quot;http://yeoman.io/community-generators.html&quot;&gt;generadores&lt;/a&gt; de
&lt;a href=&quot;http://yeoman.io&quot; title=&quot;Yeoman&quot;&gt;Yeoman&lt;/a&gt;.&lt;/big&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://yeoman.io&quot; title=&quot;Yeoman&quot;&gt;Yeoman&lt;/a&gt; es una herramienta para automatizar
tareas en proyectos front-end. Trabaja conjuntamente con
&lt;a href=&quot;http://bower.io&quot;&gt;Bower&lt;/a&gt; y &lt;a href=&quot;http://gruntjs.com&quot;&gt;Grunt&lt;/a&gt;, otro par de
proyectos &lt;em&gt;open source&lt;/em&gt; para (adivina...) automatizar tareas.&lt;/p&gt;

&lt;h3&gt;Bower&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://bower.io&quot;&gt;Bower&lt;/a&gt; fue liberado por Twitter y sirve para gestionar
todas las dependencias de tu proyecto front-end. La idea es similar a
&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; en PHP o
&lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt; para Ruby.&lt;/p&gt;

&lt;p&gt;El funcionamiento de Bower es bastante simple: creas la configuración en
un archivo &lt;em&gt;bower.json&lt;/em&gt; y después basta con lanzar una línea en la
terminal (&lt;em&gt;$ bower install&lt;/em&gt;) para tener todas las dependencias en local. Da
igual si son 5 o 50, Bower las bajara por ti en pis pas.&lt;/p&gt;

&lt;h3&gt;Grunt&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://gruntjs.com&quot;&gt;Grunt&lt;/a&gt; creado y mantenido por la gente de
&lt;a href=&quot;http://bocoup.com/&quot;&gt;Bocoup&lt;/a&gt;, es una herramienta para automatizar tareas
en tu entorno de desarrollo.&lt;/p&gt;

&lt;p&gt;Por ejemplo concatenar &lt;em&gt;.js&lt;/em&gt; o &lt;em&gt;.css&lt;/em&gt;, minimizar HTML e incluso
imágenes, compilar archivos &lt;em&gt;.less&lt;/em&gt; o &lt;em&gt;.sass&lt;/em&gt;, crear sprites sobre la
marcha, etc. En fin, Grunt tiene un gran repositorio de
&lt;a href=&quot;http://gruntjs.com/plugins&quot; title=&quot;Grunt plugins&quot;&gt;plugins&lt;/a&gt; para cualquier
tarea que te puedas imaginar.&lt;/p&gt;

&lt;p&gt;Para configurar Grunt son necesarios dos archivos: &lt;em&gt;package.json&lt;/em&gt; y
&lt;em&gt;Gruntfile.js.&lt;/em&gt;En el primero debes listar todas las dependencias
necesarias para correr las tareas. En el segundo creas la configuración
de cada tarea o grupo de tareas. Si sientes curiosidad, te recomiendo
leer este artículo: &lt;a href=&quot;http://24ways.org/2013/grunt-is-not-weird-and-hard/&quot; title=&quot;Grunt for People Who Think Things Like Grunt are Weird and Hard&quot;&gt;Grunt for People Who Think Things Like Grunt are
Weird and
Hard&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Resumen&lt;/h3&gt;

&lt;p&gt;Un generador Yeoman instala dependencias, crea carpetas, configura
entornos (uno para producción y otro para desarrollo), arranca un
servidor local, realiza tests, etc. Cualquier tarea por compleja que
sea, basta con configurarlo correctamente para que Yeoman sea capaz de
hacerlo el solo (siempre con la ayuda de Bower y Grunt).&lt;/p&gt;

&lt;p&gt;La verdad es que existen cientos de
&lt;a href=&quot;http://yeoman.io/community-generators.html&quot;&gt;generadores&lt;/a&gt; super útiles,
para prácticamente cualquier tipo de proyecto. Y si no encuentras alguno
que se adapte a tu requerimientos, siempre puedes &lt;a href=&quot;http://yeoman.io/generators.html#writing-your-first-generator&quot; title=&quot;Yeoman: writing your first generator&quot;&gt;crear un generador
personalizado&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lo que más me gusta es que se aprende mucho leyendo el código de cada
generador. La gente intenta volcar todo su conocimiento técnico y forma
de trabajar en cada generador. Y eso es oro puro.&lt;/p&gt;

&lt;h3&gt;Manos a la obra&lt;/h3&gt;

&lt;p&gt;Si os apetece trastear un poco, os dejo un par de ejemplos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Importante&lt;/strong&gt;: previamente debéis tener instalados
&lt;a href=&quot;http://nodejs.org/download/&quot;&gt;Node&lt;/a&gt;, &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;,
&lt;a href=&quot;http://yeoman.io/community-generators.html&quot; title=&quot;Yeoman: community generators&quot;&gt;Yeoman&lt;/a&gt;,
&lt;a href=&quot;http://bower.io&quot;&gt;Bower&lt;/a&gt; y &lt;a href=&quot;http://gruntjs.com&quot;&gt;Grunt&lt;/a&gt; en vuestras
máquinas.&lt;/p&gt;

&lt;h3&gt;Crear un proyecto Bootstrap&lt;/h3&gt;

&lt;p&gt;Vamos a utilizar
el &lt;a href=&quot;https://github.com/Thomas-Lebeau/generator-bootstrap-less&quot; title=&quot;yeoman generator bootstrap&quot;&gt;generador&lt;/a&gt; creado
por &lt;a href=&quot;https://github.com/Thomas-Lebeau&quot;&gt;Thomas Lebeau&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Este generador creará un proyecto con las siguientes dependencias:
&lt;a href=&quot;http://getbootstrap.com&quot;&gt;Bootstrap 3&lt;/a&gt;,
&lt;a href=&quot;http://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;, &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; y &lt;a href=&quot;http://fortawesome.github.io/Font-Awesome/&quot;&gt;Font
Awesone&lt;/a&gt; (opcional).&lt;/p&gt;

&lt;p&gt;La configuración de Bower la podéis encontrar en
&lt;a href=&quot;https://github.com/Thomas-Lebeau/generator-bootstrap-less/blob/master/app/templates/_bower.json&quot;&gt;_bower.json&lt;/a&gt;. Las
tareas de Grunt están listadas en
&lt;a href=&quot;https://github.com/Thomas-Lebeau/generator-bootstrap-less/blob/master/app/templates/_package.json&quot;&gt;_package.json&lt;/a&gt;. Estos
ficheros forman parte del template que necesita Yeoman para hacer su
magia.&lt;/p&gt;

&lt;p&gt;La configuración de Yeoman la podéis encontrar en el fichero
&lt;a href=&quot;https://github.com/Thomas-Lebeau/generator-bootstrap-less/blob/master/app/index.js&quot;&gt;/app/index.js&lt;/a&gt;
del generador.&lt;/p&gt;

&lt;p&gt;Con la ayuda de npm, &lt;strong&gt;instalamos el generador del proyecto&lt;/strong&gt; en global.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ sudo npm install -g generator-bootstrap-less&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si queréis ver los generadores instalados:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ yo —help&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Creamos un directorio&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ mkdir ~/learning-bootstrap &amp;amp;&amp;amp; cd $_&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le decimos a Yeoman que cree el &lt;strong&gt;scaffolding del proyecto&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ yo bootstrap-less&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Instalamos las dependencias del proyecto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Esto creará y descargará dichas dependencias en la
ruta &lt;em&gt;app/bower_components&lt;/em&gt; del proyecto&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ bower install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Construimos el proyecto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El siguiente comando lanzará el grupo de tareas &lt;em&gt;default&lt;/em&gt; descrita en
la línea 289 del fichero &lt;em&gt;Gruntfile.js&lt;/em&gt;. En este caso: &lt;em&gt;jshint, test y build&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Las dependencias necesarias para ejecutar las tareas se encuentran en la
carpeta &lt;em&gt;node_modules&lt;/em&gt; en la raíz del proyecto.&lt;/p&gt;

&lt;p&gt;Para ir más ligeros, vamos a saltarnos las comprobaciones de &lt;a href=&quot;http://www.jshint.com/install/&quot;&gt;JSHint&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ grunt —force&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Arrancamos el servidor&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ grunt serve&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si todo es correcto veréis en vuestra terminal la siguiente información:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Running “serve” task&lt;/p&gt;

&lt;p&gt;Running “clean:server” (clean) task&lt;/p&gt;

&lt;p&gt;Running “coffee:dist” (coffee) task&lt;/p&gt;

&lt;p&gt;File app/scripts/hello.js created.&lt;/p&gt;

&lt;p&gt;Running “less:dist” (less) task&lt;/p&gt;

&lt;p&gt;File app/styles/main.css.map created.&lt;/p&gt;

&lt;p&gt;File app/styles/main.css created.&lt;/p&gt;

&lt;p&gt;Running “copy:server” (copy) task&lt;/p&gt;

&lt;p&gt;Running “connect:livereload” (connect) task&lt;/p&gt;

&lt;p&gt;Started connect web server on 127.0.0.1:9000.&lt;/p&gt;

&lt;p&gt;Running “watch” task Waiting...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Estas son todas las tareas y grupos de tareas que ha lanzado &lt;em&gt;$ grunt
serve&lt;/em&gt;. Si queréis ver la configuración de esta tarea, abrid el archivo
&lt;em&gt;Gruntfile.js&lt;/em&gt; y buscad la línea 260.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creamos el proyecto listo para subir a PRO&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Probad a lanzar la siguiente línea:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ grunt serve:dist&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como veréis las tareas ejecutadas son completamente distintas. Esto es
posible gracias a que con Grunt podemos encadenar tareas con
diferentes propósitos.&lt;/p&gt;

&lt;p&gt;Una vez finalizada la tarea &lt;em&gt;$ server:dist&lt;/em&gt; podéis ver que se ha creado
una carpeta llamada &lt;em&gt;dist&lt;/em&gt;. Allí es donde podéis encontrar vuestro
proyecto listo para subir a PRO. ¿Fascinante eh? :)&lt;/p&gt;

&lt;p&gt;Con el siguiente comando podréis ver las tareas disponibles:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ grunt —help&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Crear un proyecto Foundation&lt;/h3&gt;

&lt;p&gt;Vamos a utilizar el
&lt;a href=&quot;https://github.com/bauschan/generator-foundation-five&quot;&gt;generador&lt;/a&gt;
creado por &lt;a href=&quot;https://github.com/bauschan&quot;&gt;Peter Foerger&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Este generador funciona básicamente como el anterior, con la única
diferencia que el layout se gestiona con &lt;a href=&quot;http://foundation.zurb.com&quot;&gt;Foundation
5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La configuración de Bower la podéis encontrar en &lt;a href=&quot;https://github.com/bauschan/generator-foundation-five/blob/master/app/templates/_bower.json&quot;&gt;_bower.json&lt;/a&gt;.
Las tareas de Grunt están listadas en &lt;a href=&quot;https://github.com/bauschan/generator-foundation-five/blob/master/app/templates/_package.json&quot;&gt;_package.json&lt;/a&gt;.
Estos ficheros forman parte del template que necesita Yeoman para hacer su magia.&lt;/p&gt;

&lt;p&gt;La configuración de Yeoman la podéis encontrar en el fichero &lt;a href=&quot;https://github.com/bauschan/generator-foundation-five/blob/master/app/index.js&quot;&gt;/app/index.js&lt;/a&gt;
del generador.&lt;/p&gt;

&lt;p&gt;Con la ayuda de npm, &lt;strong&gt;instalamos el generador&lt;/strong&gt; en global&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ sudo npm install -g generator-foundation-five&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Creamos un directorio&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ mkdir ~/learning-foundation &amp;amp;&amp;amp; cd $_&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le decimos a Yeoman que cree el &lt;strong&gt;scaffolding del proyecto&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ yo foundation-five&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Instalamos las dependencias del proyecto&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ bower install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Instalamos las dependencias de Grunt&lt;/strong&gt;. Esto no debería ser necesario pero el generador tiene un bug.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ npm install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Construimos el proyecto&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ grunt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Arrancamos el servidor&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$ grunt serve&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Sat, 15 Feb 2014 07:56:00 +0100</pubDate>
				<link>http://blog.garciaechegaray.com//2014/02/15/el-workflow-perfecto-yeoman-bower-grunt.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/02/15/el-workflow-perfecto-yeoman-bower-grunt.html</guid>
			</item>
		
			<item>
				<title>setTimeout() vs $.Deferred()</title>
				<description>&lt;p&gt;Este el típico problema en el cual utilizaba un setTimeout(). Estaba
obligado a esperar que se ejecutara la linea superior para poder hacer
uso del nodo DOM (en este caso “lightbox_content_user”).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$(“#wrap_all”).prepend(&amp;lt;?php echo json_encode($lightbox) ?\&amp;gt;));

setTimeout(function(){
    $(“.lightbox_content_user”).css(‘width’, container_width - 80);
}, 500);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora estoy comenzando a utilizar un objeto jQuery llamado
&lt;a href=&quot;https://api.jquery.com/category/deferred-object/&quot;&gt;Deferred&lt;/a&gt;.
Básicamente hace lo mismo, pero de forma mas limpia. Y así evitamos la
famosa &lt;a href=&quot;http://www.reddit.com/r/javascript/comments/1atmht/how_we_killed_the_callback_pyramid_of_doom/&quot;&gt;Callback Pyramid of
Doom&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;var dfd = $.Deferred();

dfd.done($(“#wrap_all”).prepend(&amp;lt;?php echo json_encode($lightbox) ?\&amp;gt;);

dfd.resolve($(“.lightbox_content_user”).css(‘width’, container_width - 80));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Fri, 14 Feb 2014 20:02:00 +0100</pubDate>
				<link>http://blog.garciaechegaray.com//2014/02/14/settimeout-vs-deferred.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/02/14/settimeout-vs-deferred.html</guid>
			</item>
		
			<item>
				<title>Enfold &amp; Fontello</title>
				<description>&lt;p&gt;Comenzamos con las
presentaciones: &lt;a href=&quot;http://themeforest.net/item/enfold-responsive-multipurpose-theme/4519990&quot;&gt;Enfold&lt;/a&gt;
es un theme para Wordpress bastante completo (muchos &lt;em&gt;widgets&lt;/em&gt; por
defecto). &lt;a href=&quot;http://fontello.com/&quot;&gt;Fontello&lt;/a&gt; es una herramienta que te
permite utilizar &lt;em&gt;icon webfonts&lt;/em&gt;en tus proyectos web/mobile.\&lt;/p&gt;

&lt;p&gt;El problema con
&lt;a href=&quot;http://themeforest.net/item/enfold-responsive-multipurpose-theme/4519990&quot;&gt;Enfold&lt;/a&gt; es
carece de una documentación completa, y para realizar algunas tareas que
no están ya implementadas por defecto es bastante engorroso encontrar la
forma de hacerlo.&lt;/p&gt;

&lt;p&gt;Hace unos días he descubierto como añadir nuevos iconos en
&lt;a href=&quot;http://themeforest.net/item/enfold-responsive-multipurpose-theme/4519990&quot;&gt;Enfold&lt;/a&gt;,
aprovechando la librería &lt;a href=&quot;http://fontello.com/&quot;&gt;Fontello&lt;/a&gt; que ya viene
pre-instalada.&lt;/p&gt;

&lt;p&gt;En la ruta ‘/enfold/functions.php’ existe un array  con todos los iconos
por defecto. Por ejemplo el icono de búsqueda es algo así:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#39;search&amp;#39; =&amp;gt; array( &amp;#39;font&amp;#39; =&amp;gt;&amp;#39;entypo-fontello&amp;#39;, &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;ue803&amp;#39;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si queremos añadir uno nuevo (por ejemplo ‘phone’) debemos ir al
fichero:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;/enfold/config- templatebuilder/avia-template-
builder/assets/fonts/entypo-fontello.svg&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;y buscar la cadena ‘phone’ (o algo similar) dentro de cada propiedad glyph-name.&lt;/p&gt;

&lt;p&gt;Seguidamente copiamos el valor numérico adyacente de la propiedad ‘unicode’ (en este caso 854).&lt;/p&gt;

&lt;p&gt;Volvemos a ‘enfold/functions.php’ y añadimos la siguiente línea al array:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#39;phone&amp;#39; =&amp;gt; array( &amp;#39;font&amp;#39; =&amp;gt;&amp;#39;entypo-fontello&amp;#39;, &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;ue854&amp;#39;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finalmente ya podemos usarlo en cualquier parte del theme:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;echo ‘&amp;lt;span ‘.av_icon_string(‘phone’).’&amp;gt;&amp;lt;/ span&amp;gt;’;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ayudaría mucho que existiera un documento con todos los iconos
disponibles, pero por ahora esta es la única forma.&lt;/p&gt;
</description>
				<pubDate>Fri, 14 Feb 2014 19:51:00 +0100</pubDate>
				<link>http://blog.garciaechegaray.com//2014/02/14/enfold-fontello.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2014/02/14/enfold-fontello.html</guid>
			</item>
		
			<item>
				<title>Responsive Design Exercise</title>
				<description>&lt;p&gt;Some time ago, I did a exercise for apply a job. This was the exam I
made.&lt;/p&gt;

&lt;p&gt;I think is a good idea for practice your front-end skills. So, if you
have some time and want a challenge for sunday morning, you can try on
your own to complete the task.&lt;/p&gt;

&lt;p&gt;The exercise seem to be very simple (it doesn’t): &lt;em&gt;create the markup of
this design for mobiles, tablets and desktop&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://bruno.garciaechegaray.com/responsive-testing/responsive-layout-test.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bruno.garciaechegaray.com/responsive-testing/tool_responsive.html&quot;&gt;Check out my
version&lt;/a&gt;.
Maybe I’ll improve it soon. I don’t know if the approach was the
correct, but &lt;strong&gt;it works in three different devices!&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I have &lt;a href=&quot;https://github.com/brunogarcia/responsive-testing&quot;&gt;a repo in Github with the
code&lt;/a&gt;, check it out
too.&lt;/p&gt;

&lt;p&gt;I used a &lt;a href=&quot;https://github.com/mattkersley/Responsive-Design-Testing&quot;&gt;responsive
tool&lt;/a&gt; created
by &lt;a href=&quot;https://github.com/mattkersley/&quot;&gt;Matt Kersley&lt;/a&gt;, was very usefull.&lt;/p&gt;
</description>
				<pubDate>Fri, 29 Nov 2013 20:16:00 +0100</pubDate>
				<link>http://blog.garciaechegaray.com//2013/11/29/responsive-design-exercise.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2013/11/29/responsive-design-exercise.html</guid>
			</item>
		
			<item>
				<title>Configurar Weinre en Windows 7 con Node y npm</title>
				<description>&lt;p&gt;&lt;big&gt;&lt;a href=&quot;http://people.apache.org/%7Epmuellr/weinre/&quot;&gt;Weinre&lt;/a&gt; es una herramienta que nos permite debugear un servicio web desde
cualquier dispositivo móvil.&lt;/big&gt;&lt;/p&gt;

&lt;p&gt;Por cuestiones profesionales, en los últimos meses mi entorno de trabajo
ha sido Windows 7. Necesitamos debugear y testear constantemente en
entornos móviles y los drivers para estos dispositivos solo suelen tener
versiones para Windows.&lt;/p&gt;

&lt;p&gt;Dicho esto, uno de los problemas de trabajar con Windows es que muchos
tutoriales para configurar cualquier herramienta open source están
enfocado para usuarios de Linux/Mac. &lt;/p&gt;

&lt;p&gt;No es la primer vez que me pasa (ni será la última), así que explico
brevemente cómo configurar
&lt;a href=&quot;http://people.apache.org/%7Epmuellr/weinre/&quot;&gt;Weinre&lt;/a&gt; en Windows 7 a
través de Node.js y npm. &lt;/p&gt;

&lt;p&gt;Venga, manos a la obra:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.-&lt;/strong&gt; Instalar &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.-&lt;/strong&gt;
Instalar &lt;a href=&quot;http://people.apache.org/%7Epmuellr/weinre/&quot;&gt;Weinre&lt;/a&gt; utilizando &lt;a href=&quot;https://npmjs.org/&quot;&gt;npm&lt;/a&gt; (package
manager que se instala junto con Node). Abrir un cmd y escribir:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;npm -g install weinre &lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nota: “-g” lo instalará globalmente en una carpeta
oculta: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;C&lt;/em&gt;&lt;em&gt;:\Users\Usuario\AppData\Roaming\npm&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;3.-&lt;/strong&gt; Arrancar el
servicio &lt;a href=&quot;http://people.apache.org/%7Epmuellr/weinre/&quot;&gt;Weinre&lt;/a&gt; desde cmd:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;cd C:\Users\Usuario\AppData\Roaming\npm&lt;/em&gt;
&lt;em&gt;weinre.cmd —boundHost 192.168.0.1 —httpPort 8081&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notas: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Debemos usar nuestra IP para que el dispositivo móvil pueda acceder.
Obviamente no funciona si lo configuras como localhost.&lt;/li&gt;
&lt;li&gt;  Si no conoces tu IP, abre un cmd y teclea &lt;em&gt;ipconfig.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;  Para evitar conflictos (con un servicio WAMP por ejemplo) utiliza un
puerto alternativo, en este caso 8081.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También os podéis crear un archivo batch para automatizar esta tarea:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;@echo off&lt;/em&gt;\
&lt;em&gt;echo Starting Weinre Server&lt;/em&gt;\
&lt;em&gt;cd C:\Users\Usuario\AppData\Roaming\npm&lt;/em&gt;\
&lt;em&gt;weinre.cmd —boundHost 192.168.0.1 —httpPort 8081&lt;/em&gt;\
&lt;em&gt;pause&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;4.-&lt;/strong&gt; Incluir el script de Weinre en nuestra app:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;script
src=”http://192.168.0.1:8081/target/target-script-min.js#anonymous”&amp;gt;&amp;lt;/script&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;5.-&lt;/strong&gt; Acceder al servicio desde un browser:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://192.168.0.1:8081/client/#anonymous&quot;&gt;http://192.168.0.1:8081/client/#anonymous&lt;/a&gt;\&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Y con esto ya podéis testear el correcto funcionamiento de vuestra
aplicación en cualquier dispositivo móvil.&lt;/p&gt;
</description>
				<pubDate>Mon, 23 Sep 2013 17:08:00 +0200</pubDate>
				<link>http://blog.garciaechegaray.com//2013/09/23/configurar-weinre-en-windows-7-con-node-y-npm.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2013/09/23/configurar-weinre-en-windows-7-con-node-y-npm.html</guid>
			</item>
		
			<item>
				<title>You just keep pushing</title>
				<description>&lt;blockquote&gt;
&lt;p&gt;You just keep pushing. You just keep pushing. I made every mistake
that could be made. But I just kept pushing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;—&lt;a href=&quot;https://www.khanacademy.org/math/trigonometry/graphs/graphing_coordinates/v/descartes-and-cartesian-coordinates&quot;&gt;Descartes&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Sat, 31 Aug 2013 10:27:30 +0200</pubDate>
				<link>http://blog.garciaechegaray.com//2013/08/31/you-just-keep-pushing-you-just-keep-pushing-i.html</link>
				<guid isPermaLink="true">http://blog.garciaechegaray.com//2013/08/31/you-just-keep-pushing-you-just-keep-pushing-i.html</guid>
			</item>
		
	</channel>
</rss>